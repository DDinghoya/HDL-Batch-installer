name: Release HDL Batch Installer
on:
  workflow_dispatch:
  push:
    paths:
      - 'Release**'
      - 'Release32**'
      - 'translations/catalogs/*.po'

#  schedule: 
#   - cron: "0 15 * * 5,2"
jobs:
  check-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: "Check file existence"
        uses: andstor/file-existence-action@v1
        with:
          files: "Release/HDL-Batch-installer.exe, Release32/HDL-Batch-installer.exe, Release/HDL.EXE, Release/Common/config.INI"
          allow_failure: "true"

  Repack_and_Release:
    needs: check-binaries
    runs-on: ubuntu-latest
    steps:


    - name: checkout code for release
      uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get install gettext p7zip


    - name: get version from changelog
      shell: bash
      run: echo "::set-output name=string::$(grep -m1 '\[*\]' Release/changes.log | sed 's/\[//' | sed 's/\]//' | awk '{$1=$1;print}')"
      id: version
      
    - name: get version from changelog as release tag
      shell: bash
      run: echo "::set-output name=version_tag::$(grep -m1 '\[*\]' Release/changes.log | sed 's/\[//' | sed 's/\]//' | sed -r 's/\s+//g' | sed 's/Revision/rev/' | sed 's/Release/rel/'| awk '{$1=$1;print}')"
      id: tag
            
    - name: Download Latest HDL-Dump
      run: |
        cd Release
        wget https://github.com/israpps/hdl-dump/releases/download/hdlinst/HDL.EXE -O $PWD/HDL.EXE

    - name: Compile translation catalogs
      run: |
         cd translations
         cd catalogs
         msgfmt pt_BR.po -o pt_BR.mo
         msgfmt es.po -o es.mo
         msgfmt it_IT.po -o it_IT.mo
         cd ..
         cd ..
         cp translations/catalogs/pt_BR.mo Release/Lang/pt_BR/HDLBinst.mo
         cp translations/catalogs/es.mo Release/Lang/es/HDLBinst.mo
         cp translations/catalogs/it_IT.mo Release/Lang/it/HDLBinst.mo

    - name: Create translation template package
      run: |
         DATEE=`date '+[%Y-%m-%d]'`
         mv translations HDLBinst-Translation-$DATEE
         7z a -t7z -r Translation-template.7z HDLBinst-Translation-*/*.pot

    - name: Repack latest x64 build
      run: |
        SCH=${GITHUB_SHA::7}
        REF=${{ steps.tag.outputs.version_tag }}
        cd Release
        cd Common
        echo commit $SCH>commit.sys
        echo `date`>>commit.sys
        echo pkgid $REF >>commit.sys
        cd ..
        cd ..
        cp -r Release "HDLBInst[${{ steps.version.outputs.string }}-x64]"
        7z a -t7z -r HDLBInst-x64-$REF.7z HDLBInst*x64*/*

    - name: Repack latest x86 build
      run: |
        SCH=${GITHUB_SHA::7}
        REF=${{ steps.tag.outputs.version_tag }}
        cd Release
        cd Common
        echo 32bits build >>commit.sys
        cd ..
        cd ..
        rm Release/HDL-Batch-installer.exe
        cp Release32/HDL-Batch-installer.exe Release/HDL-Batch-installer.exe
        mv Release "HDLBInst[${{ steps.version.outputs.string }}-x86]"
        7z a -t7z -r HDLBInst-x86-$REF.7z HDLBInst*x86*/*


    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: HDL-INST
        path: |
             HDLBInst*.7z
             Translation-template.7z

    - name: draft pre-release
      if: | 
         (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') &&
         (!endsWith("${{steps.tag.outputs.version_tag}}",'-rel'))
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        draft: true
        automatic_release_tag: "${{ steps.tag.outputs.version_tag }}"
        title: "${{ steps.version.outputs.string }}"
        files: |
              HDLBInst*.7z
              Translation-template.7z
              
    - name: release
      if: | 
         (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') &&
         (endsWith("${{steps.tag.outputs.version_tag}}",'-rel'))
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        draft: false
        automatic_release_tag: "${{ steps.tag.outputs.version_tag }}"
        title: "${{ steps.version.outputs.string }}"
        prerelease: false
        files: |
              HDLBInst*.7z
              Translation-template.7z

    - name: Deploy pre-release
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: marvinpinto/action-automatic-releases@latest
      with:
        prerelease: true
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "Latest"
        title: "${{ steps.version.outputs.string }}"
        files: |
              HDLBInst*.7z
              Translation-template.7z

  discord_webhooks:
    needs: Repack_and_Release
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:

    - name: checkout code for release
      uses: actions/checkout@v1

    - name: get version from changelog
      shell: bash
      run: echo "::set-output name=string::$(grep -m1 '\[*\]' Release/changes.log | sed 's/\[//' | sed 's/\]//' | awk '{$1=$1;print}')"
      id: version
      
    - name: get version from changelog as release tag
      shell: bash
      run: echo "::set-output name=version_tag::$(grep -m1 '\[*\]' Release/changes.log | sed 's/\[//' | sed 's/\]//' | sed -r 's/\s+//g' | sed 's/Revision/rev/' | sed 's/Release/rel/' | awk '{$1=$1;print}')"
      id: tag

    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: HDL-INST
        
    - name: Discord Webhook, Latest release
      if: |
        github.event_name == 'push' && 
        !endsWith(${{steps.tag.outputs.version_tag}},'-rel')
      uses: tsickert/discord-webhook@v2.0.2
      with:
        webhook-url: ${{ secrets.TESTERS_WEBHOOK }}
        content: "<@&859572447761793034> & <@&859615291477590046> , HDL Batch Installer has been updated some minutes ago\\n according to changelog: **[${{ steps.version.outputs.string }}]** \\n as always, you can download the latest version from here:\\n https://github.com/israpps/HDL-Batch-installer/releases/tag/Latest \\n or <#863913236457062421>"
 
    - name: Discord Webhook, Stable Release
      if: |
        github.event_name == 'push' &&
        endsWith(${{steps.tag.outputs.version_tag}},'-rel')
      uses: tsickert/discord-webhook@v2.0.2
      with:
        webhook-url: ${{ secrets.TESTERS_WEBHOOK }}
        content: "@everyone, A new release of HDL Batch Installer has been uploaded some minutes ago\\n according to changelog: **[${{ steps.version.outputs.string }}]** \\n as always, download from here:\\n https://github.com/israpps/HDL-Batch-installer/releases/tag/${{ steps.tag.outputs.version_tag }} \\n or <#863913236457062421>"
        
    - name: Discord Webhook, Latest release
      if: github.event_name == 'repository_dispatch'
      uses: tsickert/discord-webhook@v2.0.2
      with:
        webhook-url: ${{ secrets.TESTERS_WEBHOOK }}
        content: "<@&859572447761793034> & <@&859615291477590046> , HDL Batch Installer **[${{ steps.version.outputs.string }}]** Has been **re-released** because **HDL Dump was updated** some minutes ago \\n as always, you can download the latest version from here:\\n https://github.com/israpps/HDL-Batch-installer/releases/tag/Latest \\n or <#863913236457062421>"
        
        
    - name: Upload release to discord backup
      uses: sinshutu/upload-to-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.BACKUP_WEBHOOK }}
      with:
        args: HDL-INST/HDLBInst*.7z
        
